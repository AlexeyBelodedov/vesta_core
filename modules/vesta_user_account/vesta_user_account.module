<?php

use Drupal\Core\Theme\ThemeManagerInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\RendererInterface;
use Symfony\Component\HttpKernel\Event\GetResponseForControllerResultEvent;
use Drupal\Core\Extension\ModuleHandlerInterface;
use Drupal\Core\Render\ElementInfoManagerInterface;
use Drupal\Core\Render\Attachment;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormBuilderInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Form\FormBuilder;

use Drupal\user\Entity\User;

use Drupal\Core\Entity\EntityManagerInterface;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Core\StringTranslation\StringTranslationTrait;

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;

function set_new_user_auth_page($route_name, array &$suggestions, array &$variables)
{
    if ($route_name == 'vesta_user_account.user_auth') {
        $user_crate = \Drupal\user\Entity\User::create();

        $register_form = \Drupal::service('entity.form_builder')->getForm($user_crate, 'register');
        $login_form = \Drupal::formBuilder()->getForm('Drupal\user\Form\UserLoginForm');
        $password_form = \Drupal::formBuilder()->getForm('Drupal\user\Form\UserPasswordForm');

        $variables['register_form'] = $register_form;
        $variables['login_form'] = $login_form;
        $variables['password_form'] = $password_form;

        $suggestions[] = 'page__auth';
        //dpm($variables);
    }
}
function set_new_user_pages($route_name, array &$suggestions, array &$variables){
    $user = \Drupal::currentUser();
    if ($user->isAuthenticated()) {
        if ($route_name == 'vesta_user_account.user_auth'
            || $route_name == 'user.login'
            || $route_name == 'user.register'
            || $route_name == 'user.pass') {
//            $url = \Drupal\Core\Url::fromRoute('user.page');
//            $response = new \Symfony\Component\HttpFoundation\RedirectResponse($url->toString());
//            $response->send();
//            exit;
        }
    }else{
        if ($route_name == 'user.login'
            || $route_name == 'user.register'
            || $route_name == 'user.pass'
            || $route_name == 'user.page') {
            $url = \Drupal\Core\Url::fromRoute('vesta_user_account.user_auth');
            $response = new \Symfony\Component\HttpFoundation\RedirectResponse($url->toString());
            $response->send();
            exit;
        }
    }
    set_new_user_auth_page($route_name, $suggestions, $variables);
}

function vesta_user_account_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {
        case 'help.page.vesta_user_account':
            return '<p>' . t('Provides custom user authentication forms on a single page.') . '</p>';
    }
}


function vesta_user_account_theme_suggestions_page_alter(array &$suggestions, array &$variables) {
    $route_name = \Drupal::routeMatch()->getRouteName();
    set_new_user_pages($route_name, $suggestions, $variables);
}
function vesta_user_account_theme($existing, $type, $theme, $path) {
    return [
        'page__auth' => [
            'variables' => [],
            'template' => 'user-auth',
            'path' => drupal_get_module_path('vesta_user_account'). '/templates',
            'render element' => 'page',
        ],
    ];
}

function vesta_user_account_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
    // Change the submit button text on the user password form.
    if ($form_id == 'user_pass') {
        if (isset($form['actions']['submit'])) {
            $form['actions']['submit']['#value'] = t('Сбросить пароль');
        }
    }
//    if ($form_id == 'user_register_form') {
//        $form['actions']['submit']['#ajax'] = [
//            'callback' => 'vesta_user_account_register_ajax_callback',
//            'event' => 'click',
//            'progress' => [
//                'type' => 'throbber',
//                'message' => 'Регистрация...',
//            ],
//        ];
//        $form['#attached']['library'][] = 'vesta_user_account/register_ajax';
//    }
}

//function vesta_user_account_register_ajax_callback(array &$form, FormStateInterface $form_state) {
//    // Обработка формы регистрации
//
//
//    // Validate the form fields
//    $values = $form_state->getValues();
//    $errors = [];
//
//    // Validate the name field
//    if (empty($values['field_name'])) {
//        $errors['field_name'] = t('The name field is required.');
//    }
//
//    // Validate the middle name field
//    if (empty($values['field_middle_name'])) {
//        $errors['field_middle_name'] = t('The middle name field is required.');
//    }
//
//    // Validate the surname field
//    if (empty($values['field_surname'])) {
//        $errors['field_surname'] = t('The surname field is required.');
//    }
//
//    // Validate the email field
//    if (empty($values['mail'])) {
//        $errors['mail'] = t('The email field is required.');
//    } else {
//        $mail_manager = \Drupal::service('plugin.manager.mail');
//        $mail_manager->mail('user', 'register_no_approval_required', $values['mail'], 'en', array('user' => $values), TRUE);
//        $message = t('Вы успешно зарегистрировались на нашем сайте! Ваш аккаунт готов к использованию.');
//        drupal_set_message($message, 'status');
//    }
//
//    // If there are any errors, return them
//    if (!empty($errors)) {
//        $form_state->setError($errors);
//        return;
//    }
//
//    watchdog('vesta_user_account', '<pre><code>' . print_r($form_state->getValues(), TRUE) . '</code></pre>', 'info');
//    $user_storage = \Drupal::entityTypeManager()->getStorage('user');
//    $values = [
//        'name' => $form_state->getValue('name'),
//        'mail' => $form_state->getValue('mail'),
//        'pass' => 'password',
//        'field_name' => $form_state->getValue('field_name'),
//        'field_middle_name' => $form_state->getValue('field_middle_name'),
//        'field_surname' => $form_state->getValue('field_surname'),
//    ];
//    $user_storage->create($values);
//
//    // Create the user
//    $user_storage = \Drupal::entityTypeManager()->getStorage('user');
//    $user = $user_storage->create($values);
//    $user->save();
//
//    // Create the AJAX response
//    $response = new AjaxResponse();
//
//    // Add the success message
//    $message = t('Регистрация прошла успешно');
//    $response->addCommand(new ReplaceCommand('#register-message', $message));
//    $response->addCommand(new AddClassCommand('#register-message', 'active'));
//
//    // Return the AJAX response
//    return $response;
//}
function vesta_user_account_page_attachments(array &$attachments) {
    $attachments['#attached']['library'][] = 'vesta_user_account/global-library';
}